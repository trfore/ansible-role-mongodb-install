name: Update MongoDB Version
on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 2,6"

jobs:
  update_mongodb:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out codebase
        uses: actions/checkout@v4

      - name: Check 'mongodb.version' file
        run: |
          # add mongodb gpg and repositories
          sudo bash .github/workflows/scripts/add_mongodb_repo.sh

          # get current and latest versions, update files if needed
          VERSION=(4.4 5.0 6.0 7.0 8.0)
          for i in "${VERSION[@]}"; do
              maj=${i%.*}
              latest=$(apt-cache show mongodb-org | grep -om1 "^Version:\s"${i}"\.[0-9]*$" | awk '{print $2}')
              current=$(jq -r --arg i "${i}" '.[$i]' mongodb.versions 2>/dev/null)

              if [ "$latest" = "$current" ]; then
                  echo "v${maj} is current in 'mongodb.versions'"
                  declare "latest_v$maj"=$latest
              else
                  update_version_file=true
                  echo "v${maj} is out of date in 'mongodb.versions'"
                  declare "latest_v$maj"=$latest

                  # update workflow, default vars and readme files
                  echo "updating workflow, molecule scenario, default variables and README files to $latest"
                  sed -i "s/$maj\.[0-9]\.[0-9][0-9]\?/$latest/" .github/workflows/*.yml ./defaults/main.yml ./molecule/default/molecule.yml README.md
              fi
              unset latest current
          done

          # update 'mongodb.versions' file
          if [ "$update_version_file" == true ]; then
              jq -n \
                  --arg v4 "$latest_v4" \
                  --arg v5 "$latest_v5" \
                  --arg v6 "$latest_v6" \
                  --arg v7 "$latest_v7" \
                  --arg v8 "$latest_v8" \
                  '{"4.4": $v4, "5.0": $v5, "6.0": $v6, "7.0": $v7, "8.0": $v8}' >mongodb.versions

              echo "MongoDB version check complete, updated to latest versions"
          else
              update_version_file=false
              echo "MongoDB version check complete, versions are current"
          fi

          echo "UPDATE_VERSION_FILE="$update_version_file"" >> $GITHUB_ENV

      - name: Create pull request
        if: env.UPDATE_VERSION_FILE
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          commit-message: update mongodb default version
          title: update mongodb default version
          body: |
            Updates 'mongodb.versions', github workflow, default variables, and
            README files to latest versions from [MongoDB][1]

            Auto-generated by [create-pull-request][2]

            [1]: https://github.com/mongodb/mongo
            [2]: https://github.com/peter-evans/create-pull-request
          labels: dependencies, status/auto-created
          branch: update-mongodb-ver
